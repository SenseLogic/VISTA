html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6
{
    margin : 0;
    padding : 0;
}

h1,
h2,
h3,
h4,
h5,
h6
{
    font-size : 100%;
    font-weight : normal;
}

ul
{
    list-style : none;
}

button,
input,
select,
textarea
{
    margin : 0;
}

html
{
    box-sizing : border-box;
}

*, *:before, *:after
{
    box-sizing : inherit;
}

img,
embed,
iframe,
object,
video
{
    height : auto;
    max-width : 100%;
}

audio
{
    max-width : 100%;
}

iframe
{
    border : 0;
}

table
{
    border-collapse : collapse;
    border-spacing : 0;
}

td,
th
{
    padding : 0;
    text-align : left;
}

select,
option
{
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
}

// ~~

MakeWidth( size, unit, suffix )

    .width-{size}{suffix}
    {
        width : size * unit;
    }

    .min-width-{size}{suffix}
    {
        min-width : size * unit;
    }

    .max-width-{size}{suffix}
    {
        max-width : size * unit;
    }

MakeHeight( size, unit, suffix )

    .height-{size}{suffix}
    {
        height : size * unit;
    }

    .min-height-{size}{suffix}
    {
        min-height : size * unit;
    }

    .max-height-{size}{suffix}
    {
        max-height : size * unit;
    }

MakePadding( size, unit, suffix )

    .padding-{size}{suffix}
    {
        padding : size * unit !important;
    }

    .padding-horizontal-{size}{suffix}
    {
        padding-left : size * unit !important;
        padding-right : size * unit !important;
    }

    .padding-vertical-{size}{suffix}
    {
        padding-bottom : size * unit !important;
        padding-top : size * unit !important;
    }

    .padding-left-{size}{suffix}
    {
        padding-left : size * unit !important;
    }

    .padding-right-{size}{suffix}
    {
        padding-right : size * unit !important;
    }

    .padding-bottom-{size}{suffix}
    {
        padding-bottom : size * unit !important;
    }

    .padding-top-{size}{suffix}
    {
        padding-top : size * unit !important;
    }

MakeMargin( size, unit, suffix )

    .margin-{size}{suffix}
    {
        margin : size * unit !important;
    }

    .margin-horizontal-{size}{suffix}
    {
        margin-left : size * unit !important;
        margin-right : size * unit !important;
    }

    .margin-vertical-{size}{suffix}
    {
        margin-bottom : size * unit !important;
        margin-top : size * unit !important;
    }

    .margin-left-{size}{suffix}
    {
        margin-left : size * unit !important;
    }

    .margin-right-{size}{suffix}
    {
        margin-right : size * unit !important;
    }

    .margin-bottom-{size}{suffix}
    {
        margin-bottom : size * unit !important;
    }

    .margin-top-{size}{suffix}
    {
        margin-top : size * unit !important;
    }

MakeFontSize( size, unit, suffix )

    .font-size-{size}{suffix}
    {
        font-size : size * unit;
    }

MakeWidths( start, step, count, unit, suffix )

    for index in 0 .. count
    {
        size = start + index * step;

        MakeWidth( size, unit, suffix );
    }

MakeHeights( start, step, count, unit, suffix )

    for index in 0 .. count
    {
        size = start + index * step;

        MakeHeight( size, unit, suffix );
    }

MakePaddings( start, step, count, unit, suffix )

    for index in 0 .. count
    {
        size = start + index * step;

        MakePadding( size, unit, suffix );
    }

MakeMargins( start, step, count, unit, suffix )

    for index in 0 .. count
    {
        size = start + index * step;

        MakeMargin( size, unit, suffix );
    }

MakeFontSizes( start, step, count, unit, suffix )

    for index in 0 .. count
    {
        size = start + index * step;

        MakeFontSize( size, unit, suffix );
    }

// ~~

.full-width
{
    width : 100%;
}

.hide
{
    display : none !important;
}

.show
{
    display : initial !important;
}

// ~~

.block
{
    width : 100%;
    margin : 0 auto;
    display : block;
}

// ~~

.float-center
{
    margin-left : auto;
    margin-right : auto;
    display : block;
    float : none;
}

.float-left
{
    float : left;
}

.float-right
{
    float : right;
}

.clear-fix::after
{
    content : "";
    display : table;
    clear : both;
}

// ~~

.text-align-left
{
    text-align : left;
}

.text-align-right
{
    text-align : right;
}

.text-align-center
{
    text-align : center;
}

// ~~

.flex-row
{
    display : flex;
    flex-direction : row;
}

.flex-row-reverse
{
    display : flex;
    flex-direction : row-reverse;
}

.flex-column
{
    display : flex;
    flex-direction : column;
}

.flex-column-reverse
{
    display : flex;
    flex-direction : column-reverse;
}

.flex-wrap
{
    flex-wrap : wrap;
}

.flex-wrap-reverse
{
    flex-wrap : wrap-reverse;
}

.flex-no-wrap
{
    flex-wrap : nowrap;
}

.flex-fill
{
    flex : 1 1 0%;
    flex-basis : 0%;
}

.flex-basis-auto
{
    flex-basis : auto;
}

// ~~

.justify-content-start
{
    justify-content : start;
}

.justify-content-flex-start
{
    justify-content : flex-start;
}

.justify-content-center
{
    justify-content : center;
}

.justify-content-safe-center
{
    justify-content : safe center;
}

.justify-content-unsafe-center
{
    justify-content : unsafe center;
}

.justify-content-end
{
    justify-content : end;
}

.justify-content-flex-end
{
    justify-content : flex-end;
}

.justify-content-left
{
    justify-content : left;
}

.justify-content-right
{
    justify-content : right;
}

.justify-content-stretch
{
    justify-content : stretch;
}

.justify-content-between
{
    justify-content : space-between;
}

.justify-content-around
{
    justify-content : space-around;
}

.justify-content-evenly
{
    justify-content : space-evenly;
}

// ~~

.justify-items-start
{
    justify-items : start;
}

.justify-items-self-start
{
    justify-items : self-start;
}

.justify-items-flex-start
{
    justify-items : flex-start;
}

.justify-items-center
{
    justify-items : center;
}

.justify-items-safe-center
{
    justify-items : safe center;
}

.justify-items-unsafe-center
{
    justify-items : unsafe center;
}

.justify-items-end
{
    justify-items : end;
}

.justify-items-self-end
{
    justify-items : self-end;
}

.justify-items-flex-end
{
    justify-items : flex-end;
}

.justify-items-left
{
    justify-items : left;
}

.justify-items-right
{
    justify-items : right;
}

// ~~

.justify-self-start
{
    justify-self : start;
}

.justify-self-self-start
{
    justify-self : self-start;
}

.justify-self-flex-start
{
    justify-self : flex-start;
}

.justify-self-center
{
    justify-self : center;
}

.justify-self-safe-center
{
    justify-self : safe center;
}

.justify-self-unsafe-center
{
    justify-self : unsafe center;
}

.justify-self-end
{
    justify-self : end;
}

.justify-self-self-end
{
    justify-self : self-end;
}

.justify-self-flex-end
{
    justify-self : flex-end;
}

.justify-self-left
{
    justify-self : left;
}

.justify-self-right
{
    justify-self : right;
}

// ~~

.align-content-start
{
    align-content : start;
}

.align-content-flex-start
{
    align-content : flex-start;
}

.align-content-center
{
    align-content : center;
}

.align-content-safe-center
{
    align-content : safe center;
}

.align-content-unsafe-center
{
    align-content : unsafe center;
}

.align-content-end
{
    align-content : end;
}

.align-content-flex-end
{
    align-content : flex-end;
}

.align-content-stretch
{
    align-content : stretch;
}

.align-content-between
{
    align-content : space-between;
}

.align-content-around
{
    align-content : space-around;
}

.align-content-evenly
{
    align-content : space-evenly;
}

.align-content-baseline
{
    align-content : baseline;
}

.align-content-first-baseline
{
    align-content : first baseline;
}

.align-content-last-baseline
{
    align-content : last baseline;
}

// ~~

.align-items-start
{
    align-items : start;
}

.align-items-self-start
{
    align-items : self-start;
}

.align-items-flex-start
{
    align-items : flex-start;
}

.align-items-center
{
    align-items : center;
}

.align-items-safe-center
{
    align-items : safe center;
}

.align-items-unsafe-center
{
    align-items : unsafe center;
}

.align-items-end
{
    align-items : end;
}

.align-items-self-end
{
    align-items : self-end;
}

.align-items-flex-end
{
    align-items : flex-end;
}

.align-items-stretch
{
    align-items : stretch;
}

.align-items-baseline
{
    align-items : baseline;
}

.align-items-first-baseline
{
    align-items : first baseline;
}

.align-items-last-baseline
{
    align-items : last baseline;
}

// ~~

.align-self-start
{
    align-self : start;
}

.align-self-center
{
    align-self : center;
}

.align-self-safe-center
{
    align-self : safe center;
}

.align-self-unsafe-center
{
    align-self : unsafe center;
}

.align-self-end
{
    align-self : end;
}

.align-self-stretch
{
    align-self : stretch;
}

.align-self-self-start
{
    align-self : self-start;
}

.align-self-self-end
{
    align-self : self-end;
}

.align-self-flex-start
{
    align-self : flex-start;
}

.align-self-flex-end
{
    align-self : flex-end;
}

.align-self-baseline
{
    align-self : baseline;
}

.align-self-first-baseline
{
    align-self : first baseline;
}

.align-self-last-baseline
{
    align-self : last baseline;
}

// ~~

Pc = 1%;
Pt = 1rem / 16;

// ~~

InputRadius = 10 * Pt;
InputPadding = 5 * Pt;

// ~~

.input, .button, .select
{
    border-radius: InputRadius;
    padding : InputPadding;
}

.input
{
    padding-left : 2 * InputPadding;
    padding-right : 2 * InputPadding;
}

.select
{
    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');
    background-repeat: no-repeat, repeat;
    background-position: right .7em top 50%, 0 0;
    background-size: .65em auto, 100%;
}
