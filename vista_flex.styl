.flex-direction-row
{
    flex-direction: row;
}

.flex-direction-row-reverse
{
    flex-direction: row-reverse;
}

.flex-direction-column
{
    flex-direction: column;
}

.flex-direction-column-reverse
{
    flex-direction: column-reverse;
}

.flex-wrap
{
    flex-wrap: wrap;
}

.flex-nowrap
{
    flex-wrap: nowrap;
}

// ~~

MakeFlex( media_query_name_list = {} )

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .flex-direction-row-{media_query_name}
            {
                flex-direction: row;
            }

            .flex-direction-row-reverse-{media_query_name}
            {
                flex-direction: row-reverse;
            }

            .flex-direction-column-{media_query_name}
            {
                flex-direction: column;
            }

            .flex-direction-column-reverse-{media_query_name}
            {
                flex-direction: column-reverse;
            }

            .flex-wrap-{media_query_name}
            {
                flex-wrap: wrap;
            }

            .flex-nowrap-{media_query_name}
            {
                flex-wrap: nowrap;
            }
        }
    }

// ~~

MakeFlexBasis( column_count, media_query_name_list = {} )

    for column_index in 1 .. column_count

        .flex-basis-{column_index}_{column_count}
        {
            flex-basis: 100% * ( column_index / column_count );
            max-width: 100% * ( column_index / column_count );
        }

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .flex-basis-{column_index}_{column_count}-{media_query_name}
            {
                flex-basis: 100% * ( column_index / column_count );
                max-width: 100% * ( column_index / column_count );
            }
        }
    }

// ~~

MakeFlexBasisRange( first_column_count, last_column_count, media_query_name_list = {} )

    for column_count in first_column_count .. last_column_count
    {
        MakeFlexBasis( column_count, media_query_name_list )
    }

// ~~

MakeFlexShrink( minimum_factor, maximum_factor, media_query_name_list = {} )

    for factor in minimum_factor .. maximum_factor

        .flex-shrink-{factor}
        {
            flex-shrink: factor;
        }

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .flex-shrink-{factor}-{media_query_name}
            {
                flex-shrink: factor;
            }
        }
    }

// ~~

MakeFlexGrow( minimum_factor, maximum_factor, media_query_name_list = {} )

    for factor in minimum_factor .. maximum_factor

        .flex-grow-{factor}
        {
            flex-grow: factor;
        }

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .flex-grow-{factor}-{media_query_name}
            {
                flex-grow: factor;
            }
        }
    }
