.width-auto
{
    width: auto;
}

.width-full
{
    width: 100%;
}

// ~~

MakeWidthAuto( media_query_name_list = {} )

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .width-auto-{media_query_name}
            {
                width: auto;
            }
        }
    }

// ~~

MakeWidth( size, unit_value, unit_name, media_query_name_list = {} )

    .width-{size}{unit_name}
    {
        width: size * unit_value;
    }

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .width-{size}{unit_name}-{media_query_name}
            {
                width: size * unit_value;
            }
        }
    }

// ~~

MakeWidthRange( start, step, count, unit_value, unit_name, media_query_name_list = {} )

    for index in 0 .. count - 1
    {
        size = start + index * step;

        MakeWidth( size, unit_value, unit_name, media_query_name_list );
    }

// ~~

MakeMinWidth( size, unit_value, unit_name, media_query_name_list = {} )

    .min-width-{size}{unit_name}
    {
        min-width: size * unit_value;
    }

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .min-width-{size}{unit_name}-{media_query_name}
            {
                min-width: size * unit_value;
            }
        }
    }

// ~~

MakeMinWidthRange( start, step, count, unit_value, unit_name, media_query_name_list = {} )

    for index in 0 .. count - 1
    {
        size = start + index * step;

        MakeMinWidth( size, unit_value, unit_name, media_query_name_list );
    }

// ~~

MakeMaxWidth( size, unit_value, unit_name, media_query_name_list = {} )

    .max-width-{size}{unit_name}
    {
        max-width: size * unit_value;
    }

    for media_query_name in media_query_name_list
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .max-width-{size}{unit_name}-{media_query_name}
            {
                max-width: size * unit_value;
            }
        }
    }

// ~~

MakeMaxWidthRange( start, step, count, unit_value, unit_name, media_query_name_list = {} )

    for index in 0 .. count - 1
    {
        size = start + index * step;

        MakeMaxWidth( size, unit_value, unit_name, media_query_name_list );
    }

// ~~

MakeFractionalWidthRange( column_count, media_query_name_list = {} )

    for column_index in 1 .. column_count
    {
        .width-{column_index}_{column_count}
        {
            width: 100% * ( column_index / column_count );
        }

        for media_query_name in media_query_name_list
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .width-{column_index}_{column_count}-{media_query_name}
                {
                    width: 100% * ( column_index / column_count );
                }
            }
        }
    }

// ~~

MakeMinFractionalWidthRange( column_count, media_query_name_list = {} )

    for column_index in 1 .. column_count
    {
        .min-width-{column_index}_{column_count}
        {
            min-width: 100% * ( column_index / column_count );
        }

        for media_query_name in media_query_name_list
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .min-width-{column_index}_{column_count}-{media_query_name}
                {
                    min-width: 100% * ( column_index / column_count );
                }
            }
        }
    }

// ~~

MakeMaxFractionalWidthRange( column_count, media_query_name_list = {} )

    for column_index in 1 .. column_count
    {
        .max-width-{column_index}_{column_count}
        {
            max-width: 100% * ( column_index / column_count );
        }

        for media_query_name in media_query_name_list
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .max-width-{column_index}_{column_count}-{media_query_name}
                {
                    max-width: 100% * ( column_index / column_count );
                }
            }
        }
    }

// ~~

MakeGridWidthRange( column_count, total_size, gutter_size, unit_name, media_query_name_list = {} )

    column_size = ( total_size - ( column_count - 1 ) * gutter_size ) / column_count;

    for column_index in 1 .. column_count
    {
        .grid-width-{column_index}{unit_name}
        {
            width: column_size * column_index + gutter_size * ( column_index - 1 );
        }

        for media_query_name in media_query_name_list
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .grid-width-{column_index}{unit_name}-{media_query_name}
                {
                    width: column_size * column_index + gutter_size * ( column_index - 1 );
                }
            }
        }
    }
