// -- MIXINS

MakeHeightAuto( media_query_name_array = {}, prefix =, suffix =, important = )

    .{prefix}height-auto{suffix}{suffix}
    {
        height: auto important;
    }

    for media_query_name in media_query_name_array
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .{prefix}height-auto-{media_query_name}{suffix}
            {
                height: auto important;
            }
        }
    }

// ~~

MakeHeightValue( size, unit_value, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    .{prefix}height-{size}{unit_name}{suffix}
    {
        height: size * unit_value important;
    }

    for media_query_name in media_query_name_array
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .{prefix}height-{size}{unit_name}-{media_query_name}{suffix}
            {
                height: size * unit_value important;
            }
        }
    }

// ~~

MakeHeightValueRange( start, step, count, unit_value, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    for index in 0 .. count - 1
    {
        size = start + index * step;

        MakeHeightValue( size, unit_value, unit_name, media_query_name_array, prefix, suffix, important );
    }

// ~~

MakeMinHeightValue( size, unit_value, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    .{prefix}min-height-{size}{unit_name}{suffix}
    {
        min-height: size * unit_value important;
    }

    for media_query_name in media_query_name_array
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .{prefix}min-height-{size}{unit_name}-{media_query_name}{suffix}
            {
                min-height: size * unit_value important;
            }
        }
    }

// ~~

MakeMinHeightValueRange( start, step, count, unit_value, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    for index in 0 .. count - 1
    {
        size = start + index * step;

        MakeMinHeightValue( size, unit_value, unit_name, media_query_name_array, prefix, suffix, important );
    }

// ~~

MakeMaxHeightValue( size, unit_value, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    .{prefix}max-height-{size}{unit_name}{suffix}
    {
        max-height: size * unit_value important;
    }

    for media_query_name in media_query_name_array
    {
        @media MediaQueryMap[ media_query_name ]
        {
            .{prefix}max-height-{size}{unit_name}-{media_query_name}{suffix}
            {
                max-height: size * unit_value important;
            }
        }
    }

// ~~

MakeMaxHeightValueRange( start, step, count, unit_value, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    for index in 0 .. count - 1
    {
        size = start + index * step;

        MakeMaxHeightValue( size, unit_value, unit_name, media_query_name_array, prefix, suffix, important );
    }

// ~~

MakeFractionalHeightValueRange( column_count, media_query_name_array = {}, prefix =, suffix =, important = )

    for column_index in 1 .. column_count
    {
        .{prefix}height-{column_index}\\/{column_count}{suffix}
        {
            height: 100% * ( column_index / column_count ) important;
        }

        for media_query_name in media_query_name_array
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .{prefix}height-{column_index}\\/{column_count}-{media_query_name}{suffix}
                {
                    height: 100% * ( column_index / column_count ) important;
                }
            }
        }
    }

// ~~

MakeMinFractionalHeightValueRange( column_count, media_query_name_array = {}, prefix =, suffix =, important = )

    for column_index in 1 .. column_count
    {
        .{prefix}min-height-{column_index}\\/{column_count}{suffix}
        {
            min-height: 100% * ( column_index / column_count ) important;
        }

        for media_query_name in media_query_name_array
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .{prefix}min-height-{column_index}\\/{column_count}-{media_query_name}{suffix}
                {
                    min-height: 100% * ( column_index / column_count ) important;
                }
            }
        }
    }

// ~~

MakeMaxFractionalHeightValueRange( column_count, media_query_name_array = {}, prefix =, suffix =, important = )

    for column_index in 1 .. column_count
    {
        .{prefix}max-height-{column_index}\\/{column_count}{suffix}
        {
            max-height: 100% * ( column_index / column_count ) important;
        }

        for media_query_name in media_query_name_array
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .{prefix}max-height-{column_index}\\/{column_count}-{media_query_name}{suffix}
                {
                    max-height: 100% * ( column_index / column_count ) important;
                }
            }
        }
    }

// ~~

MakeGridHeightValueRange( row_count, total_size, gutter_size, unit_name, media_query_name_array = {}, prefix =, suffix =, important = )

    row_size = ( total_size - ( row_count - 1 ) * gutter_size ) / row_count;

    for row_index in 1 .. row_count
    {
        .{prefix}grid-height-{row_index}{unit_name}{suffix}
        {
            height: row_size * row_index + gutter_size * ( row_index - 1 ) important;
        }

        for media_query_name in media_query_name_array
        {
            @media MediaQueryMap[ media_query_name ]
            {
                .{prefix}grid-height-{row_index}{unit_name}-{media_query_name}{suffix}
                {
                    height: row_size * row_index + gutter_size * ( row_index - 1 ) important;
                }
            }
        }
    }
