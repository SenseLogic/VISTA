@charset "UTF-8";
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  outline: 0 none;
  border: 0 none;
  padding: 0;
}
body {
  margin: 0;
  line-height: 1.5;
  font-family: sans-serif;
  font-size: 1rem;
  font-weight: 400;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
hr {
  margin: 1rem 0;
  border: 0;
  opacity: 0.25;
  color: inherit;
}
hr:not([size]) {
  height: 1px;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  line-height: 1.2;
  font-weight: 500;
}
h1 {
  font-size: 2.5rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.75rem;
}
h4 {
  font-size: 1.5rem;
}
h5 {
  font-size: 1.25rem;
}
h6 {
  font-size: 1rem;
}
p {
  margin-top: 0;
  margin-bottom: 1rem;
}
abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}
address {
  margin-bottom: 1rem;
  line-height: inherit;
  font-style: normal;
}
ol,
ul {
  padding-left: 2rem;
}
ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}
ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}
dt {
  font-weight: 700;
}
dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}
blockquote {
  margin: 0 0 1rem;
}
b,
strong {
  font-weight: bolder;
}
small {
  font-size: 0.875em;
}
sub,
sup {
  position: relative;
  line-height: 0;
  font-size: 0.75em;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
a {
  text-decoration: none;
}
a:hover {
  text-decoration: none;
}
a:not([href]),
a:not([href]):hover {
  text-decoration: none;
  color: inherit;
}
pre,
code,
kbd,
samp {
  font-size: 1em;
}
pre {
  overflow: auto;
  margin-top: 0;
  margin-bottom: 1rem;
  display: block;
  font-size: 0.875em;
}
pre code {
  font-size: inherit;
  word-break: normal;
  color: inherit;
}
code {
  font-size: 0.875em;
  word-wrap: break-word;
}
a > code {
  color: inherit;
}
kbd {
  border-radius: 0.2rem;
  padding: 0.2rem 0.4rem;
  font-size: 0.875em;
}
kbd kbd {
  padding: 0;
  font-size: 1em;
  font-weight: 700;
}
figure {
  margin: 0 0 1rem;
}
img {
  vertical-align: middle;
}
svg {
  overflow: hidden;
  vertical-align: middle;
}
table {
  border-collapse: collapse;
}
caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  caption-side: bottom;
  text-align: left;
}
th {
  text-align: inherit;
}
label {
  margin-bottom: 0.5rem;
  display: inline-block;
}
button {
  border-radius: 0;
}
input,
button,
select,
optgroup,
textarea {
  margin: 0;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
}
button,
input {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
select {
  word-wrap: normal;
}
[list]::-webkit-calendar-picker-indicator {
  display: none;
}
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
button:not(:disabled),
[type="button"]:not(:disabled),
[type="reset"]:not(:disabled),
[type="submit"]:not(:disabled) {
  cursor: pointer;
}
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  -webkit-appearance: textfield;
}
textarea {
  overflow: auto;
  resize: vertical;
}
fieldset {
  margin: 0;
  min-width: 0;
  border: 0;
  padding: 0;
}
legend {
  margin-bottom: 0.5rem;
  width: 100%;
  padding: 0;
  float: left;
  line-height: inherit;
  font-size: 1.5rem;
  white-space: normal;
  color: inherit;
}
mark {
  padding: 0.2em;
}
progress {
  vertical-align: baseline;
}
::-webkit-datetime-edit {
  overflow: visible;
  line-height: 0;
}
[type="search"] {
  -webkit-appearance: textfield;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-color-swatch-wrapper {
  padding: 0;
}
::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}
output {
  display: inline-block;
}
summary {
  display: list-item;
  cursor: pointer;
}
template {
  display: none;
}
main {
  display: block;
}
[hidden] {
  display: none !important;
}
select:-moz-focusring {
  text-shadow: 0 0 0 #000;
  color: transparent;
}
select {
  background: transparent;
}
a:focus,
button:focus,
input:focus,
select:focus {
  outline: 0;
}
a:active,
a:hover {
  outline: 0;
}
html {
  background-color: #000;
}
@media (min-width: 20em) {
  html {
    background-color: #fff;
  }
}
@media (max-width: 19.98em), (min-width: 40em) {
  html {
    background-color: #f00;
  }
}
@media (max-width: 19.98em), (min-width: 40em) {
  html {
    background-color: #f00;
  }
}
@media (max-height: 39.98em) and (max-width: 19.98em), (min-height: 20em) and (min-width: 40em) {
  html {
    background-color: #0f0;
  }
}
@media (max-height: 39.98em) and (max-width: 19.98em), (min-height: 20em) and (min-width: 40em) {
  html {
    background-color: #00f;
  }
}
/*
MakeExtendedContainer();
MakeMarginedContainer( 20px, 40px 80px 120px 160px 200px, min-width-40em min-width-60em min-width-80em min-width-100em min-width-120em, "large-" );
MakeMarginedContainer( 20px, 80px 120px 160px 200px 240px, min-width-40em min-width-60em min-width-80em min-width-100em min-width-120em, "narrow-" );
MakePaddedContainer( 20px, 40px 80px 120px 160px 200px, min-width-40em min-width-60em min-width-80em min-width-100em min-width-120em, "large-" );
MakePaddedContainer( 20px, 80px 120px 160px 200px 240px, min-width-40em min-width-60em min-width-80em min-width-100em min-width-120em, "narrow-" );
MakeMarginLateralValue( 8, 1px, "px" );
MakeMarginLateralValue( 16, 1px, "px" );
MakeMarginVerticalValue( 8, 1px, "px" );
MakeMarginVerticalValue( 16, 1px, "px" );
MakeHeightAuto();
MakeHeightValue( 100, 1%, "\%" );
MakeHeightAuto();
MakeMinHeightValue( 100, 1vh, "vh" );
MakeWidthValue( 100, 1%, "\%" );
MakeFractionalWidthValueRange( 12 );
MakePaddingLateralValue( 8, 1px, "px" );
MakePaddingLateralValue( 16, 1px, "px" );
MakePaddingVerticalValue( 8, 1px, "px" );
MakePaddingVerticalValue( 16, 1px, "px" );

MakeDisplayNone();
MakeDisplayFlex();
MakeDisplayHidden();
MakeFlexDirectionRow();
MakeFlexDirectionColumn();
MakeFlexGrowValue( 1 );
MakeJustifyContentStart();
MakeJustifyContentCenter();
MakeJustifyContentSpaceBetween();
MakeJustifyContentEnd();
MakeAlignItemsStart();
MakeAlignItemsCenter();
MakeAlignItemsEnd();
MakeObjectFitCover();

MakeBackgroundColorValue( "black", BlackColor );
MakeBackgroundColorValue( "darkest-gray", DarkestGrayColor );
MakeBackgroundColorValue( "darker-gray", DarkerGrayColor );
MakeBackgroundColorValue( "dark-gray", DarkGrayColor );
MakeBackgroundColorValue( "gray", GrayColor );
MakeBackgroundColorValue( "light-gray", LightGrayColor );
MakeBackgroundColorValue( "lighter-gray", LighterGrayColor );
MakeBackgroundColorValue( "lightest-gray", LightestGrayColor );
MakeBackgroundColorValue( "white", WhiteColor );
MakeBackgroundColorValue( "red", RedColor );
MakeBackgroundColorValue( "green", GreenColor );
MakeBackgroundColorValue( "blue", BlueColor );

SetRootFontSize( 1rem, 1.1rem 1.2rem 1.3rem 1.4rem, min-width-90em min-width-100em min-width-110em min-width-120em );
MakeFontSizeValue( 12, 1px, "px" );
MakeFontSizeValue( 16, 1px, "px" );
MakeFontSizeValue( 20, 1px, "px" );
MakeFontSizeValue( 24, 1px, "px" );
MakeFontWeightValueRange( 100, 100, 9 );
MakeColorValue( "black", BlackColor );
MakeColorValue( "darkest-gray", DarkestGrayColor );
MakeColorValue( "darker-gray", DarkerGrayColor );
MakeColorValue( "dark-gray", DarkGrayColor );
MakeColorValue( "gray", GrayColor );
MakeColorValue( "light-gray", LightGrayColor );
MakeColorValue( "lighter-gray", LighterGrayColor );
MakeColorValue( "lightest-gray", LightestGrayColor );
MakeColorValue( "white", WhiteColor );
MakeColorValue( "red", RedColor );
MakeColorValue( "green", GreenColor );
MakeColorValue( "blue", BlueColor );

// ~~

MakeExtendedContainer( MediaQueryNameList, "test-" );
MakeCenteredContainer( 10rem, 15rem 25rem 35rem 55rem 75rem, MediaQueryNameList, "test-" );
MakeMarginedContainer( 1rem, 2rem 3rem 4rem 5rem 6rem, MediaQueryNameList, "test-" );
MakePaddedContainer( 1rem, 2rem 3rem 4rem 5rem 6rem, MediaQueryNameList, "test-" );
MakeMarginAuto( MediaQueryNameList );
MakeMarginLateralAuto( MediaQueryNameList );
MakeMarginLateralValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMarginVerticalAuto( MediaQueryNameList );
MakeMarginVerticalValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMarginLeftAuto( MediaQueryNameList );
MakeMarginLeftValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMarginRightAuto( MediaQueryNameList );
MakeMarginRightValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMarginTopAuto( MediaQueryNameList );
MakeMarginTopValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMarginBottomAuto( MediaQueryNameList );
MakeMarginBottomValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeFractionalMarginLeftValueRange( 12, 12, MediaQueryNameList );
MakeFractionalMarginRightRange( 12, 12, MediaQueryNameList );

MakeHeightAuto( MediaQueryNameList );
MakeHeightValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMinHeightValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMaxHeightValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeFractionalHeightValueRange( 12, MediaQueryNameList );
MakeMinFractionalHeightValueRange( 12, MediaQueryNameList );
MakeMaxFractionalHeightValueRange( 12, MediaQueryNameList );
MakeGridHeightValueRange( 12, 100%, 2%, "col", MediaQueryNameList );
MakeWidthAuto( MediaQueryNameList );
MakeWidthValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMinWidthValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeMaxWidthValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeFractionalWidthValueRange( 12, MediaQueryNameList );
MakeMinFractionalWidthValueRange( 12, MediaQueryNameList );
MakeMaxFractionalWidthValueRange( 12, MediaQueryNameList );
MakeGridWidthValueRange( 12, 100%, 2%, "col", MediaQueryNameList );
MakePaddingValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakePaddingLateralValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakePaddingVerticalValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakePaddingLeftValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakePaddingRightValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakePaddingTopValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakePaddingBottomValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeGutterValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );

MakeDisplayNone( MediaQueryNameList );
MakeDisplayNone( MediaQueryNameList, , -important, !important );
MakeFlexWrap( MediaQueryNameList );
MakeFlexBasisValueRange( 12, 12, MediaQueryNameList );
MakeFlexShrinkValueRange( 0, 1, 12, 1, "", MediaQueryNameList );
MakeFlexGrowValueRange( 0, 1, 12, 1, "", MediaQueryNameList );

MakeLineHeightValueRange( 0.5, 0.5, 4, 1, "", MediaQueryNameList );
MakeLineHeightValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeFontSizeValueRange( 10, 10, 5, 1px, "px", MediaQueryNameList );
MakeFontWeightValueRange( 100, 100, 9, MediaQueryNameList );
MakeTextAlignCenter( MediaQueryNameList );
MakeTextTransformUppercase( MediaQueryNameList );

MakeCarouselStripValue( 2 );
MakeCarouselStripValue( 3 );
MakeCarouselStripValue( 4 );
MakeCarouselStripValue( 5 );
MakeCarouselStripValue( 6 );
MakeCarouselSlideValue( 2 );
MakeCarouselSlideValue( 3 );
MakeCarouselSlideValue( 4 );
MakeCarouselSlideValue( 5 );
MakeCarouselSlideValue( 6 );
MakeParallax( MediaQueryNameList );
*/
